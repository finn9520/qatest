{"ast":null,"code":"var _jsxFileName = \"/Users/jasonfinnegan/qa/qatest/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass UserNotFoundError extends Error {}\n\nclass UnknownError extends Error {}\n\nconst LOADING_STATE = {\n  IDLE: 'idle',\n  LOADING: 'loading'\n};\nconst MESSAGE_TYPE = {\n  SUCCESS: 'success',\n  FAILURE: 'failure'\n};\n\nconst createSuccessMessage = message => ({\n  type: MESSAGE_TYPE.SUCCESS,\n  message\n});\n\nconst createFailureMessage = message => ({\n  type: MESSAGE_TYPE.FAILURE,\n  message\n});\n\nfunction App() {\n  _s();\n\n  const [repos, setRepos] = useState([]);\n  const [username, setUsername] = useState('');\n  const [dataState, setDataState] = useState(LOADING_STATE.IDLE);\n  const [message, setMessage] = useState(null);\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    setDataState(LOADING_STATE.LOADING);\n    fetch(`https://api.github.com/users/${username}/repos`).then(throwErrorIfNeeded).then(response => response.json()).then(onSuccess).catch(onFailure).finally(afterFetch);\n  };\n\n  const throwErrorIfNeeded = response => {\n    if (response.ok) {\n      return response;\n    }\n\n    if (response.status === 404) {\n      throw new UserNotFoundError('Github user not found');\n    }\n\n    throw new UnknownError('Something went wrong');\n  };\n\n  const handleChange = event => {\n    setUsername(event.target.value);\n  };\n\n  const onSuccess = repos => {\n    showMessage(createSuccessMessage('Success!'));\n    setRepos(repos);\n  };\n\n  const onFailure = error => {\n    if (error instanceof UserNotFoundError) {\n      showMessage(createFailureMessage(error.message));\n    } else {\n      showMessage(createFailureMessage('Something went wrong'));\n    }\n\n    setRepos([]);\n  };\n\n  const afterFetch = () => {\n    setDataState(LOADING_STATE.IDLE);\n  };\n\n  const showMessage = message => {\n    setMessage(message);\n    setTimeout(() => setMessage(''), 3000);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Get Github Repos\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      children: [/*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"message-area\",\n        children: message && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: `message-${message.type}`,\n          children: /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: message.message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"input-area\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"field-username\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"username\",\n            children: \"Github Username\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"username\",\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"submit\",\n          type: \"submit\",\n          onClick: handleSubmit,\n          children: \"Go\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"output-area\",\n        children: [dataState === LOADING_STATE.LOADING && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"circle\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 13\n        }, this), dataState === LOADING_STATE.IDLE && !repos.length && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"output-status-text\",\n          children: \"No repos\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 13\n        }, this), dataState === LOADING_STATE.IDLE && repos.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"repo-list-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"repo-amount\",\n            children: [\"Found \", repos.length, \" Repos\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: repos && repos.map(_ref => {\n              let {\n                id,\n                name,\n                description,\n                html_url\n              } = _ref;\n              return /*#__PURE__*/_jsxDEV(\"li\", {\n                className: \"repo-row\",\n                children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                  children: /*#__PURE__*/_jsxDEV(\"a\", {\n                    href: html_url,\n                    rel: \"noopener noreferrer\",\n                    target: \"_blank\",\n                    children: name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 128,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 127,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"repo-description\",\n                  children: description || 'â€“'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 137,\n                  columnNumber: 23\n                }, this)]\n              }, id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 126,\n                columnNumber: 21\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"RR6wa68l4C7eh9L9BSMWX/W5yU4=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/jasonfinnegan/qa/qatest/src/App.js"],"names":["React","useState","UserNotFoundError","Error","UnknownError","LOADING_STATE","IDLE","LOADING","MESSAGE_TYPE","SUCCESS","FAILURE","createSuccessMessage","message","type","createFailureMessage","App","repos","setRepos","username","setUsername","dataState","setDataState","setMessage","handleSubmit","event","preventDefault","fetch","then","throwErrorIfNeeded","response","json","onSuccess","catch","onFailure","finally","afterFetch","ok","status","handleChange","target","value","showMessage","error","setTimeout","length","map","id","name","description","html_url"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\n\nimport './App.css';\n\nclass UserNotFoundError extends Error {}\nclass UnknownError extends Error {}\n\nconst LOADING_STATE = {\n  IDLE: 'idle',\n  LOADING: 'loading',\n};\n\nconst MESSAGE_TYPE = {\n  SUCCESS: 'success',\n  FAILURE: 'failure',\n};\n\nconst createSuccessMessage = (message) => ({\n  type: MESSAGE_TYPE.SUCCESS,\n  message,\n});\nconst createFailureMessage = (message) => ({\n  type: MESSAGE_TYPE.FAILURE,\n  message,\n});\n\nfunction App() {\n  const [repos, setRepos] = useState([]);\n\n  const [username, setUsername] = useState('');\n  const [dataState, setDataState] = useState(LOADING_STATE.IDLE);\n  const [message, setMessage] = useState(null);\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n\n    setDataState(LOADING_STATE.LOADING);\n\n    fetch(`https://api.github.com/users/${username}/repos`)\n      .then(throwErrorIfNeeded)\n      .then((response) => response.json())\n      .then(onSuccess)\n      .catch(onFailure)\n      .finally(afterFetch);\n  };\n\n  const throwErrorIfNeeded = (response) => {\n    if (response.ok) {\n      return response;\n    }\n\n    if (response.status === 404) {\n      throw new UserNotFoundError('Github user not found');\n    }\n\n    throw new UnknownError('Something went wrong');\n  };\n\n  const handleChange = (event) => {\n    setUsername(event.target.value);\n  };\n\n  const onSuccess = (repos) => {\n    showMessage(createSuccessMessage('Success!'));\n    setRepos(repos);\n  };\n\n  const onFailure = (error) => {\n    if (error instanceof UserNotFoundError) {\n      showMessage(createFailureMessage(error.message));\n    } else {\n      showMessage(createFailureMessage('Something went wrong'));\n    }\n\n    setRepos([]);\n  };\n\n  const afterFetch = () => {\n    setDataState(LOADING_STATE.IDLE);\n  };\n\n  const showMessage = (message) => {\n    setMessage(message);\n    setTimeout(() => setMessage(''), 3000);\n  };\n\n  return (\n    <div className=\"app\">\n      <header>\n        <h1>Get Github Repos</h1>\n      </header>\n\n      <main>\n        <section className=\"message-area\">\n          {message && (\n            <p className={`message-${message.type}`}>\n              <strong>{message.message}</strong>\n            </p>\n          )}\n        </section>\n\n        <form className=\"input-area\">\n          <div className=\"field-username\">\n            <label htmlFor=\"username\">Github Username</label>\n            <input id=\"username\" onChange={handleChange}></input>\n          </div>\n\n          <button className=\"submit\" type=\"submit\" onClick={handleSubmit}>\n            Go\n          </button>\n        </form>\n\n        <section className=\"output-area\">\n          {dataState === LOADING_STATE.LOADING && (\n            <div className=\"circle\"></div>\n          )}\n          {dataState === LOADING_STATE.IDLE && !repos.length && (\n            <p className=\"output-status-text\">No repos</p>\n          )}\n          {dataState === LOADING_STATE.IDLE && repos.length > 0 && (\n            <div className=\"repo-list-container\">\n              <p className=\"repo-amount\">Found {repos.length} Repos</p>\n              <ul>\n                {repos &&\n                  repos.map(({ id, name, description, html_url }) => (\n                    <li className=\"repo-row\" key={id}>\n                      <p>\n                        <a\n                          href={html_url}\n                          rel=\"noopener noreferrer\"\n                          target=\"_blank\"\n                        >\n                          {name}\n                        </a>\n                      </p>\n\n                      <p className=\"repo-description\">{description || 'â€“'}</p>\n                    </li>\n                  ))}\n              </ul>\n            </div>\n          )}\n        </section>\n      </main>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}